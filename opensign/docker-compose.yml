version: "3.8"

services:
  mongo:
    image: mongo:latest
    container_name: mongo-container
    restart: unless-stopped
    volumes:
      - data-volume:/data/db
    ports:
      - "27017:27017"
    networks:
      - proxy

  server:
    image: opensign/opensignserver:main
    container_name: OpenSignServer-container
    restart: unless-stopped
    volumes:
      - opensign-files:/usr/src/app/files
    env_file: .env.prod
    environment:
      - NODE_ENV=production
      - SERVER_URL=https://opensign.example.com/api/app
      - PUBLIC_URL=https://opensign.example.com
    depends_on:
      - mongo
    networks:
      - proxy
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.server.rule=Host(`opensign.example.com`) && PathPrefix(`/api`)"
    - "traefik.http.routers.server.entrypoints=web,websecure"
    - "traefik.http.routers.server.middlewares=server-strip-api@docker"
    - "traefik.http.middlewares.server-strip-api.stripprefix.prefixes=/api"
    - "traefik.http.services.server.loadbalancer.server.port=8080"
    - "traefik.http.routers.server.tls.certresolver=le"


  client:
    image: opensign/opensign:main
    container_name: OpenSign-container
    restart: unless-stopped
    env_file: .env.prod
    depends_on:
      - server
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`opensign.example.com`)"
      - "traefik.http.routers.client.entrypoints=web,websecure"
      - "traefik.http.services.client.loadbalancer.server.port=3000"
      - "traefik.http.routers.client.tls.certresolver=le"

volumes:
  data-volume:
  opensign-files:

networks:
  proxy:
    name: proxy_network
    driver: bridge
    external: true
